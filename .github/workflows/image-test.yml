name: Kit Docker Image Build & Test

# 実行するイベントの指定
on:
  # 指定ブランチで指定ファイルがPUSHされたときに実行する
  push:
    paths:
      - 'docker/**'
      - '.github/workflows/image-test.yml'

  # ブラウザ上からの手動実行設定
  workflow_dispatch:
    # inputs:
    #   any_param1:
    #     required: true
    #     description: パラメータ説明
    #     default: value
    #   any_param2:

# 環境変数の設定
env:
  DOCKER_BUILDKIT: 1
  RESISTRY_URL: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: burger-war-kit
  DOCKER_ROOT_DIR: ./docker
  DOCKER_FILE: ./docker/kit/Dockerfile
  #TEST_VERSION: test.${{ github.run_number }}
  TEST_VERSION: auto-test
  TEST_LOG_ARCHIVE: log-test.${{ github.run_number }}.tar
  RELEASE_VERSION: 4.1.1

jobs:
  # ビルドとテストを実施し、テストにPASSすれば、仮バージョンでプッシュ
  build-test:

    runs-on: ubuntu-latest

    steps:
      # 環境準備
      - name: Checkout repository
        uses: actions/checkout@v2

      # 環境準備
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: p-robotics-hub/burger_war_dev
          path: ./catkin_ws/src/burger_war_dev

      # # burger-war-kitイメージのビルド
      # - name: Build Docker Image
      #   run: docker build --file ${{ env.DOCKER_FILE }} --tag ${{ env.IMAGE_NAME }} .

      # burger-war-kitコンテナ起動
      - name: Launch Docker Container
        run: |
          mkdir -p ${HOME}/.ros/log
          mkdir -p ${HOME}/.gazebo
          mkdir -p ${GITHUB_WORKSPACE}/catkin_ws/src/burger_war_kit
          cp -r burger_war/ ${GITHUB_WORKSPACE}/catkin_ws/src/burger_war_kit/burger_war
          cp -r judge/ ${GITHUB_WORKSPACE}/catkin_ws/src/burger_war_kit/judge
          cp -r scripts/ ${GITHUB_WORKSPACE}/catkin_ws/src/burger_war_kit/scripts
          ls ${GITHUB_WORKSPACE}/catkin_ws/src/burger_war_kit/
          ls ${GITHUB_WORKSPACE}/catkin_ws/src/burger_war_dev/
          docker run \
            --name ${{ env.IMAGE_NAME }} \
            -d \
            --privileged \
            --net host \
            --mount type=bind,src=${GITHUB_WORKSPACE}/catkin_ws,dst=/home/developer/catkin_ws \
            --device /dev/snd \
            -v /dev/shm \
            -e HOST_USER_ID=$(id -u) \
            -e HOST_GROUP_ID=$(id -g) \
            ${{ env.RESISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.TEST_VERSION }} \
            tail -f /dev/null
          docker ps -a
          docker logs ${{ env.IMAGE_NAME }}
      
      # ロボコンプロジェクトのビルド
      - name: Build Robot Programs
        run: |
          pwd
          docker exec -u developer -t ${{ env.IMAGE_NAME }} bash -l -c "catkin build"

      # burger-war-kitのテスト
      - name: Test Docker Image
        id: image-test
        run: |
          docker exec -u developer -t ${{ env.IMAGE_NAME }} bash -l -c "pwd && cd src/burger_war_kit && bash scripts/sim_run_test.sh"
          tar czvf ${{ env.TEST_LOG_ARCHIVE }} ${HOME}/.gazebo/log/ ${HOME}/.ros/log/latest/ ./judge/log/

      # テスト結果をArtifactにアップロードする
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TEST_LOG_ARCHIVE }}
          path: ./${{ env.TEST_LOG_ARCHIVE }}
          retention-days: 5

      # # ghcr.ioにログイン
      # - name: Login to ghrc.io
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ secrets.GHCR_USERNAME }}
      #     password: ${{ secrets.GHCR_PASSWORD }}

      # # burger-war-kitrイメージをテストバージョンとしてプッシュ
      # - name: Push Docker Image
      #   run: |
      #     docker tag ${{ env.IMAGE_NAME }} ${{ env.RESISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.TEST_VERSION }}
      #     docker push ${{ env.RESISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.TEST_VERSION }}
